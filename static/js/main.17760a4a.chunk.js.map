{"version":3,"sources":["../../src/utils/getNormalizedScrollLeft.js","../../src/hooks/useEventCallback.js","../../src/utils/animate.js","../../src/utils/debounce.js","../../src/components/Arrows/RightArrowIcon.js","../../src/components/Arrows/LeftArrowIcon.js","../../src/components/Arrows/LeftArrow.js","../../src/components/Arrows/RightArrow.js","../../src/components/Tabs/index.js","../../src/utils/ownerDocument.js","../../src/components/Tab/index.js","App.js","index.js"],"names":["cachedType","useEnhancedEffect","window","useEffect","useLayoutEffect","useEventCallback","fn","callbackRef","useRef","current","useCallback","arguments","inDOM","document","createElement","getNormalizedScrollLeft","element","direction","scrollLeft","type","body","dummy","appendChild","createTextNode","dir","style","fontSize","width","height","position","top","overflow","removeChild","detectScrollType","Number","NaN","scrollWidth","clientWidth","easeInOutSin","time","Math","sin","PI","debounce","func","wait","timeout","debounced","args","later","apply","_this","clearTimeout","setTimeout","clear","RightArrowIcon","navBtnsIconColor","React.createElement","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","x1","y1","x2","y2","points","LeftArrowIcon","LeftArrow","leftBtnIcon","props","RightArrow","rightBtnIcon","defaultActiveTabPos","nextItem","list","item","firstChild","nextElementSibling","previousItem","console","log","previoReact","lastChild","previousElementSibling","moveFocus","currentFocus","traversalFunction","wrappedOnce","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","focus","Tabs","onTabClick","activeTab","isRTL","children","action","tabsScrollAmount","didReachEnd","didReachStart","selectedTabCoordinates","animationDuration","navBtnCLickAnimationDuration","selectedAnimationDuration","hideNavBtnsOnMobile","hideNavBtns","showTabsScroll","parseInt","end","tabsRef","React","tabRef","start","arrowsDisplay","setArrowsDisplay","hideNativeNavBtns","setHideNativeNavBtns","activeTabPosition","setActiveTabPosition","getTabsRects","tabsRects","tabRects","tabsNode","rect","getBoundingClientRect","scrollTop","scrollLeftNormalized","bottom","left","right","length","tab","isTabsOverFlown","updateActiveTabPosition","startValue","startActiveTabPosition","correction","newActiveTabPosition","isNaN","dStart","abs","dSize","updateNavBtnsState","showStartScroll","floor","toFixed","showEndScroll","ceil","onRightBtnClick","scroll","onLeftBtnClick","goToStart","goToEnd","onNativeTabClick","e","index","scrollValue","duration","animation","property","to","options","cb","ease","from","cancelled","cancel","Error","requestAnimationFrame","step","timestamp","min","animate","scrollSelectedIntoView","nextScrollStart","resizeObserver","handleResize","win","addEventListener","ResizeObserver","Array","forEach","child","observe","removeEventListener","disconnect","handleTabsScroll","startBtn","React.Fragment","onClick","endBtn","childIndex","ref","role","aria-label","onKeyDown","event","node","ownerDocument","activeElement","previousItemKey","nextItemKey","key","preventDefault","onScroll","map","selected","id","tabIndex","Tab","App","useState","setActiveTab","navBtnsRef","setIsLeftArrowDisabled","setIsRightArrowDisabled","setSelectedTabCoor","NavBtnsIconColor","showTabsFeaturesObj","val","coors","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.17760a4a.chunk.js","sourcesContent":["// Based on https://github.com/alitaheri/normalize-scroll-left\r\n\r\n'use strict'\r\n\r\n// Based on https://github.com/react-bootstrap/dom-helpers/blob/master/src/util/inDOM.js\r\nvar inDOM = !!(\r\n  typeof window !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n)\r\nvar cachedType\r\nexport function _setScrollType(type) {\r\n  cachedType = type\r\n}\r\n\r\n// Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\r\nexport function detectScrollType() {\r\n  if (cachedType) {\r\n    return cachedType\r\n  }\r\n  if (!inDOM || !window.document.body) {\r\n    return 'indeterminate'\r\n  }\r\n  var dummy = window.document.createElement('div')\r\n  dummy.appendChild(document.createTextNode('ABCD'))\r\n  dummy.dir = 'rtl'\r\n  dummy.style.fontSize = '14px'\r\n  dummy.style.width = '4px'\r\n  dummy.style.height = '1px'\r\n  dummy.style.position = 'absolute'\r\n  dummy.style.top = '-1000px'\r\n  dummy.style.overflow = 'scroll'\r\n  document.body.appendChild(dummy)\r\n  cachedType = 'reverse'\r\n  if (dummy.scrollLeft > 0) {\r\n    cachedType = 'default'\r\n  } else {\r\n    dummy.scrollLeft = 2\r\n    if (dummy.scrollLeft < 2) {\r\n      cachedType = 'negative'\r\n    }\r\n  }\r\n  document.body.removeChild(dummy)\r\n  return cachedType\r\n}\r\n\r\n// Based on https://stackoverflow.com/a/24394376\r\nexport function getNormalizedScrollLeft(element, direction) {\r\n  var scrollLeft = element.scrollLeft\r\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\r\n  if (direction !== 'rtl') {\r\n    return scrollLeft\r\n  }\r\n  var type = detectScrollType()\r\n  if (type === 'indeterminate') {\r\n    return Number.NaN\r\n  }\r\n  switch (type) {\r\n    case 'negative':\r\n      return element.scrollWidth - element.clientWidth + scrollLeft\r\n    case 'reverse':\r\n      return element.scrollWidth - element.clientWidth - scrollLeft\r\n  }\r\n  return scrollLeft\r\n}\r\n\r\nexport function setNormalizedScrollLeft(element, scrollLeft, direction) {\r\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\r\n  if (direction !== 'rtl') {\r\n    element.scrollLeft = scrollLeft\r\n    return\r\n  }\r\n  var type = detectScrollType()\r\n  if (type === 'indeterminate') {\r\n    return\r\n  }\r\n  switch (type) {\r\n    case 'negative':\r\n      element.scrollLeft =\r\n        element.clientWidth - element.scrollWidth + scrollLeft\r\n      break\r\n    case 'reverse':\r\n      element.scrollLeft =\r\n        element.scrollWidth - element.clientWidth - scrollLeft\r\n      break\r\n    default:\r\n      element.scrollLeft = scrollLeft\r\n      break\r\n  }\r\n}\r\n","import { useCallback, useEffect, useLayoutEffect, useRef } from 'react'\r\n\r\nexport const useEnhancedEffect =\r\n  typeof window === 'undefined' ? useEffect : useLayoutEffect\r\n\r\nconst useEventCallback = (fn) => {\r\n  const callbackRef = useRef(fn)\r\n\r\n  useEnhancedEffect(() => {\r\n    callbackRef.current = fn\r\n  })\r\n\r\n  return useCallback((...args) => callbackRef.current(...args), [])\r\n}\r\n\r\nexport default useEventCallback\r\n","function easeInOutSin(time) {\r\n  return (1 + Math.sin(Math.PI * time - Math.PI / 2)) / 2\r\n}\r\n\r\nexport default function animate(\r\n  property,\r\n  element,\r\n  to,\r\n  options = {},\r\n  cb = () => {}\r\n) {\r\n  const {\r\n    ease = easeInOutSin,\r\n    duration = 300 // standard\r\n  } = options\r\n  let start = null\r\n  const from = element[property]\r\n\r\n  let cancelled = false\r\n\r\n  const cancel = () => {\r\n    cancelled = true\r\n  }\r\n\r\n  const step = (timestamp) => {\r\n    if (cancelled) {\r\n      cb(new Error('Animation cancelled'))\r\n      return\r\n    }\r\n\r\n    if (start === null) {\r\n      start = timestamp\r\n    }\r\n\r\n    const time = Math.min(1, (timestamp - start) / duration)\r\n    element[property] = ease(time) * (to - from) + from\r\n\r\n    if (time >= 1) {\r\n      // eslint-disable-next-line no-undef\r\n      requestAnimationFrame(() => {\r\n        cb(null)\r\n      })\r\n      return\r\n    }\r\n\r\n    // eslint-disable-next-line no-undef\r\n    requestAnimationFrame(step)\r\n  }\r\n\r\n  if (from === to) {\r\n    cb(new Error('Element already at target position'))\r\n    return cancel\r\n  }\r\n  // eslint-disable-next-line no-undef\r\n  requestAnimationFrame(step)\r\n  return cancel\r\n}\r\n","export const debounce = (func, wait = 166) => {\r\n  let timeout\r\n\r\n  function debounced(...args) {\r\n    const later = () => {\r\n      func.apply(this, args)\r\n    }\r\n\r\n    clearTimeout(timeout)\r\n    timeout = setTimeout(later, wait)\r\n  }\r\n\r\n  debounced.clear = () => {\r\n    clearTimeout(timeout)\r\n  }\r\n\r\n  return debounced\r\n}\r\n","import * as React from 'react'\r\n\r\nconst RightArrowIcon = ({ navBtnsIconColor }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      width='24'\r\n      height='24'\r\n      viewBox='0 0 24 24'\r\n      fill='none'\r\n      stroke={navBtnsIconColor}\r\n      strokeWidth='2'\r\n      strokeLinecap='round'\r\n      strokeLinejoin='round'\r\n      className='feather feather-arrow-right'\r\n    >\r\n      <line x1='5' y1='12' x2='19' y2='12' />\r\n      <polyline points='12 5 19 12 12 19' />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default RightArrowIcon\r\n","import * as React from 'react'\r\n\r\nconst LeftArrowIcon = ({ navBtnsIconColor }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      width='24'\r\n      height='24'\r\n      viewBox='0 0 24 24'\r\n      fill='none'\r\n      stroke={navBtnsIconColor}\r\n      strokeWidth='2'\r\n      strokeLinecap='round'\r\n      strokeLinejoin='round'\r\n      className='feather feather-arrow-left'\r\n    >\r\n      <line x1='19' y1='12' x2='5' y2='12' />\r\n      <polyline points='12 19 5 12 12 5' />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default LeftArrowIcon\r\n","import * as React from 'react'\r\nconst LeftArrow = ({ leftBtnIcon, ...props }) => {\r\n  return <button {...props}>{leftBtnIcon}</button>\r\n}\r\n\r\nexport default LeftArrow\r\n","import * as React from 'react'\r\n\r\nconst RightArrow = ({ rightBtnIcon, ...props }) => {\r\n  return <button {...props}>{rightBtnIcon}</button>\r\n}\r\n\r\nexport default RightArrow\r\n","/* eslint-disable prettier/prettier */\r\nimport * as React from 'react'\r\nimport useEventCallback from '../../hooks/useEventCallback'\r\nimport { getNormalizedScrollLeft } from '../../utils/getNormalizedScrollLeft'\r\nimport animate from '../../utils/animate'\r\nimport { debounce } from '../../utils/debounce'\r\nimport RightArrowIcon from '../Arrows/RightArrowIcon'\r\nimport LeftArrowIcon from '../Arrows/LeftArrowIcon'\r\nimport LeftArrow from '../Arrows/LeftArrow'\r\nimport RightArrow from '../Arrows/RightArrow'\r\nimport ownerDocument from '../../utils/ownerDocument'\r\n\r\nconst defaultActiveTabPos = {}\r\n\r\nconst nextItem = (list, item) => {\r\n  if (list === item) {\r\n    return list.firstChild\r\n  }\r\n\r\n  if (item && item.nextElementSibling) {\r\n    return item.nextElementSibling\r\n  }\r\n\r\n  return list.firstChild\r\n}\r\n\r\nconst previousItem = (list, item) => {\r\n  console.log(item.previoReact)\r\n  if (list === item) {\r\n    return list.lastChild\r\n  }\r\n\r\n  if (item && item.previousElementSibling) {\r\n    return item.previousElementSibling\r\n  }\r\n\r\n  return list.lastChild\r\n}\r\n\r\nconst moveFocus = (list, currentFocus, traversalFunction) => {\r\n  let wrappedOnce = false\r\n  let nextFocus = traversalFunction(list, currentFocus)\r\n\r\n  while (nextFocus) {\r\n    if (nextFocus === list.firstChild) {\r\n      if (wrappedOnce) {\r\n        return\r\n      }\r\n\r\n      wrappedOnce = true\r\n    }\r\n\r\n    const nextFocusDisabled =\r\n      nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true'\r\n\r\n    if (!nextFocus.hasAttribute('tabindex') || nextFocusDisabled) {\r\n      // Move to the next element.\r\n      nextFocus = traversalFunction(list, nextFocus)\r\n    } else {\r\n      nextFocus.focus()\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport const Tabs = ({\r\n  onTabClick,\r\n  activeTab,\r\n  isRTL = false,\r\n  children,\r\n  action,\r\n  tabsScrollAmount = 3,\r\n  didReachEnd = () => null,\r\n  didReachStart = () => null,\r\n  selectedTabCoordinates = () => null,\r\n  animationDuration = 300,\r\n  navBtnCLickAnimationDuration = 300,\r\n  selectedAnimationDuration = 300,\r\n  navBtnsIconColor = 'rgba(0, 0, 0, 0.6)',\r\n  rightBtnIcon = <RightArrowIcon navBtnsIconColor={navBtnsIconColor} />,\r\n  leftBtnIcon = <LeftArrowIcon navBtnsIconColor={navBtnsIconColor} />,\r\n  hideNavBtnsOnMobile = true,\r\n  hideNavBtns = false,\r\n  showTabsScroll = false,\r\n  className\r\n}) => {\r\n  tabsScrollAmount = tabsScrollAmount ? parseInt(tabsScrollAmount) : 3\r\n  animationDuration = animationDuration ? parseInt(animationDuration) : 300\r\n  navBtnCLickAnimationDuration = navBtnCLickAnimationDuration\r\n    ? parseInt(navBtnCLickAnimationDuration)\r\n    : 300\r\n  navBtnCLickAnimationDuration = navBtnCLickAnimationDuration\r\n    ? parseInt(navBtnCLickAnimationDuration)\r\n    : 300\r\n\r\n  const start = 'left'\r\n  const end = 'right'\r\n  const scrollLeft = 'scrollLeft'\r\n\r\n  const tabsRef = React.useRef(null)\r\n  const tabRef = React.useRef([])\r\n  const [arrowsDisplay, setArrowsDisplay] = React.useState({\r\n    start: false,\r\n    end: false\r\n  })\r\n  const [hideNativeNavBtns, setHideNativeNavBtns] = React.useState(false)\r\n  const [activeTabPosition, setActiveTabPosition] =\r\n    React.useState(defaultActiveTabPos)\r\n\r\n  const getTabsRects = () => {\r\n    const tabsNode = tabsRef.current\r\n    let tabsRects\r\n\r\n    if (tabsNode) {\r\n      const rect = tabsNode.getBoundingClientRect()\r\n\r\n      tabsRects = {\r\n        clientWidth: tabsNode.clientWidth,\r\n        scrollLeft: tabsNode.scrollLeft,\r\n        scrollTop: tabsNode.scrollTop,\r\n        scrollLeftNormalized: getNormalizedScrollLeft(\r\n          tabsNode,\r\n          isRTL ? 'rtl' : 'ltr'\r\n        ),\r\n        scrollWidth: tabsNode.scrollWidth,\r\n        top: rect.top,\r\n        bottom: rect.bottom,\r\n        left: rect.left,\r\n        right: rect.right\r\n      }\r\n    }\r\n\r\n    let tabRects\r\n\r\n    if (tabsNode) {\r\n      const children = tabRef.current\r\n\r\n      if (children.length > 0) {\r\n        const tab = tabRef.current[activeTab]\r\n\r\n        tabRects = tab ? tab.getBoundingClientRect() : null\r\n      }\r\n    }\r\n\r\n    return {\r\n      tabsRects,\r\n      tabRects\r\n    }\r\n  }\r\n  const isTabsOverFlown = () => {\r\n    const { tabsRects } = getTabsRects()\r\n    return tabsRects.scrollWidth > tabsRects.clientWidth\r\n  }\r\n  React.useEffect(\r\n    () =>\r\n      isTabsOverFlown()\r\n        ? setHideNativeNavBtns(false)\r\n        : setHideNativeNavBtns(true),\r\n    []\r\n  )\r\n  const updateActiveTabPosition = useEventCallback(() => {\r\n    const { tabsRects, tabRects } = getTabsRects()\r\n    let startValue = 0\r\n    /* Setting the startActiveTabPosition variable to either 'right' or 'left' depending on the value\r\n    of the isRTL variable. */\r\n    const startActiveTabPosition = isRTL ? 'right' : 'left'\r\n\r\n    if (tabRects && tabsRects) {\r\n      const correction = isRTL\r\n        ? tabsRects.scrollLeftNormalized +\r\n          tabsRects.clientWidth -\r\n          tabsRects.scrollWidth\r\n        : tabsRects.scrollLeft\r\n      startValue =\r\n        (isRTL ? -1 : 1) *\r\n        (tabRects[startActiveTabPosition] -\r\n          tabsRects[startActiveTabPosition] +\r\n          correction)\r\n    }\r\n\r\n    const newActiveTabPosition = {\r\n      [startActiveTabPosition]: startValue,\r\n\r\n      /* Setting the width of the tab to the width of the tabRects object. */\r\n      width: tabRects ? tabRects.width : 0\r\n    }\r\n\r\n    if (\r\n      isNaN(activeTabPosition[startActiveTabPosition]) ||\r\n      isNaN(activeTabPosition.width)\r\n    ) {\r\n      setActiveTabPosition(newActiveTabPosition)\r\n    } else {\r\n      const dStart = Math.abs(\r\n        activeTabPosition[startActiveTabPosition] -\r\n          newActiveTabPosition[startActiveTabPosition]\r\n      )\r\n      const dSize = Math.abs(\r\n        activeTabPosition.width - newActiveTabPosition.width\r\n      )\r\n\r\n      if (dStart >= 1 || dSize >= 1) {\r\n        setActiveTabPosition(newActiveTabPosition)\r\n      }\r\n    }\r\n  })\r\n\r\n  const updateNavBtnsState = useEventCallback(() => {\r\n    const { scrollWidth, clientWidth } = tabsRef.current\r\n\r\n    const scrollLeft = getNormalizedScrollLeft(\r\n      tabsRef.current,\r\n      isRTL ? 'rtl' : 'ltr'\r\n    )\r\n\r\n    const showStartScroll = Math.floor(scrollLeft.toFixed(2)) > 1\r\n\r\n    const showEndScroll =\r\n      Math.ceil(scrollLeft.toFixed(2)) < scrollWidth - clientWidth - 1\r\n\r\n    if (\r\n      showStartScroll !== arrowsDisplay.start ||\r\n      showEndScroll !== arrowsDisplay.end\r\n    ) {\r\n      setArrowsDisplay({\r\n        start: showStartScroll,\r\n        end: showEndScroll\r\n      })\r\n      didReachEnd(!showEndScroll)\r\n      didReachStart(!showStartScroll)\r\n    }\r\n  })\r\n\r\n  const onRightBtnClick = () => {\r\n    const { tabsRects } = getTabsRects()\r\n\r\n    scroll(\r\n      tabsRects[scrollLeft] +\r\n        tabRef.current[activeTab].clientWidth * tabsScrollAmount,\r\n      navBtnCLickAnimationDuration || animationDuration\r\n    )\r\n  }\r\n\r\n  const onLeftBtnClick = () => {\r\n    const { tabsRects } = getTabsRects()\r\n\r\n    scroll(\r\n      tabsRects[scrollLeft] -\r\n        tabRef.current[activeTab].clientWidth * tabsScrollAmount,\r\n      navBtnCLickAnimationDuration || animationDuration\r\n    )\r\n  }\r\n\r\n  const goToStart = () => {\r\n    scroll(0)\r\n  }\r\n  const goToEnd = () => {\r\n    const { tabsRects } = getTabsRects()\r\n    const { scrollWidth } = tabsRects\r\n    scroll((isRTL ? -1 : 1) * scrollWidth)\r\n  }\r\n\r\n  React.useImperativeHandle(\r\n    action,\r\n    () => ({\r\n      onLeftBtnClick,\r\n      onRightBtnClick,\r\n      goToStart,\r\n      goToEnd\r\n    }),\r\n    [onLeftBtnClick, onRightBtnClick, goToStart, goToEnd]\r\n  )\r\n\r\n  const onNativeTabClick = useEventCallback((e, index) => {\r\n    onTabClick(e, index)\r\n  })\r\n\r\n  const scroll = (scrollValue, duration, animation = true) => {\r\n    if (animation) {\r\n      animate(scrollLeft, tabsRef.current, scrollValue, {\r\n        duration: duration || 300\r\n      })\r\n    } else {\r\n      tabsRef.current.scrollLeft = scrollValue\r\n    }\r\n  }\r\n\r\n  const scrollSelectedIntoView = useEventCallback((animation) => {\r\n    const { tabsRects, tabRects } = getTabsRects()\r\n\r\n    if (!tabsRects || !tabRects) {\r\n      return\r\n    }\r\n    if (tabRects[start] < tabsRects[start]) {\r\n      // left side of button is out of view\r\n      const nextScrollStart =\r\n        tabsRects[scrollLeft] + (tabRects[start] - tabsRects[start])\r\n\r\n      scroll(\r\n        nextScrollStart,\r\n        selectedAnimationDuration || animationDuration,\r\n        animation\r\n      )\r\n    } else if (tabRects[end] > tabsRects[end]) {\r\n      // right side of button is out of view\r\n      const nextScrollStart =\r\n        tabsRects[scrollLeft] + (tabRects[end] - tabsRects[end])\r\n\r\n      scroll(nextScrollStart, selectedAnimationDuration || animationDuration)\r\n    }\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    const handleResize = debounce(() => {\r\n      updateActiveTabPosition()\r\n      updateNavBtnsState()\r\n    })\r\n\r\n    const win = tabsRef.current\r\n    win.addEventListener('resize', handleResize)\r\n    let resizeObserver\r\n\r\n    if (typeof ResizeObserver !== 'undefined') {\r\n      // eslint-disable-next-line no-undef\r\n      resizeObserver = new ResizeObserver(handleResize)\r\n      Array.from(tabRef.current).forEach((child) => {\r\n        resizeObserver.observe(child)\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      handleResize.clear()\r\n      win.removeEventListener('resize', handleResize)\r\n\r\n      if (resizeObserver) {\r\n        resizeObserver.disconnect()\r\n      }\r\n    }\r\n  }, [updateActiveTabPosition, updateNavBtnsState])\r\n\r\n  const handleTabsScroll = React.useMemo(\r\n    () =>\r\n      debounce(() => {\r\n        updateNavBtnsState()\r\n      }),\r\n    [updateNavBtnsState]\r\n  )\r\n  React.useEffect(() => {\r\n    return () => {\r\n      handleTabsScroll.clear()\r\n    }\r\n  }, [handleTabsScroll])\r\n\r\n  React.useEffect(() => {\r\n    updateActiveTabPosition()\r\n    updateNavBtnsState()\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    scrollSelectedIntoView(defaultActiveTabPos !== activeTabPosition)\r\n\r\n    selectedTabCoordinates(activeTabPosition)\r\n  }, [scrollSelectedIntoView, activeTabPosition])\r\n\r\n  // React.useEffect(() => {\r\n  //   // I put the timeout becaReact.use there is an issue happened when i put an external css file\r\n  //   // I tried to fix it or at least know why did that happened but i couldnt find the issue so i put this timeout.\r\n  //   // so this timeout responsible on triggring this function after 100s to aviod some unexpected bugs\r\n  //   // the issue that i faced when i React.used a main css file inside my project and tried to React.use Raleway font from google fonts inside that css file\r\n  //   // so when I imported this css file inside my project this function didnt trigger\r\n  //   //  on first render and that caReact.used a bug inside the navigation button\r\n  //   // const timer = setTimeout(() =>\r\n  //   updateNavBtnsState()\r\n  //   // , 100);\r\n  //   // return () => clearTimeout(timer);\r\n  // }, [isRTL]);\r\n\r\n  const handleKeyDown = (event) => {\r\n    const list = tabsRef.current\r\n    const currentFocus = ownerDocument(list).activeElement\r\n\r\n    const role = currentFocus.getAttribute('role')\r\n\r\n    if (role !== 'tab') {\r\n      return\r\n    }\r\n\r\n    let previousItemKey = 'ArrowLeft'\r\n    let nextItemKey = 'ArrowRight'\r\n\r\n    if (isRTL) {\r\n      // swap previousItemKey with nextItemKey\r\n      previousItemKey = 'ArrowRight'\r\n      nextItemKey = 'ArrowLeft'\r\n    }\r\n\r\n    switch (event.key) {\r\n      case previousItemKey:\r\n        event.preventDefault()\r\n        moveFocus(list, currentFocus, previousItem)\r\n        break\r\n\r\n      case nextItemKey:\r\n        event.preventDefault()\r\n        moveFocus(list, currentFocus, nextItem)\r\n        break\r\n\r\n      case 'Home':\r\n        event.preventDefault()\r\n        moveFocus(list, null, nextItem)\r\n        break\r\n\r\n      case 'End':\r\n        event.preventDefault()\r\n        moveFocus(list, null, previousItem)\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  //  TODO find a new way to control prev and next btns!\r\n  const startBtn = (\r\n    <div\r\n      className={`rn___nav___btn___container ${\r\n        hideNavBtnsOnMobile ? 'display___md___none' : ''\r\n      }`}\r\n    >\r\n      {hideNativeNavBtns ||\r\n        (!hideNavBtns && (\r\n          <React.Fragment>\r\n            {isRTL ? (\r\n              <RightArrow\r\n                disabled={!arrowsDisplay.end}\r\n                className={`rn___right___nav___btn rn___btn rn___nav___btn `}\r\n                onClick={onRightBtnClick}\r\n                dir='ltr'\r\n                rightBtnIcon={rightBtnIcon}\r\n              />\r\n            ) : (\r\n              <LeftArrow\r\n                disabled={!arrowsDisplay.start}\r\n                className={`rn___left___nav___btn rn___btn rn___nav___btn `}\r\n                onClick={onLeftBtnClick}\r\n                dir='ltr'\r\n                leftBtnIcon={leftBtnIcon}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n    </div>\r\n  )\r\n\r\n  const endBtn = (\r\n    <div\r\n      className={`rn___nav___btn___container ${\r\n        hideNavBtnsOnMobile ? 'display___md___none' : ''\r\n      }`}\r\n    >\r\n      {hideNativeNavBtns ||\r\n        (!hideNavBtns && (\r\n          <React.Fragment>\r\n            {isRTL ? (\r\n              <LeftArrow\r\n                disabled={!arrowsDisplay.start}\r\n                className={`rn___left___nav___btn rn___btn rn___nav___btn `}\r\n                onClick={onLeftBtnClick}\r\n                dir='ltr'\r\n                leftBtnIcon={leftBtnIcon}\r\n              />\r\n            ) : (\r\n              <RightArrow\r\n                disabled={!arrowsDisplay.end}\r\n                className='rn___right___nav___btn rn___btn rn___nav___btn'\r\n                onClick={onRightBtnClick}\r\n                dir='ltr'\r\n                rightBtnIcon={rightBtnIcon}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n    </div>\r\n  )\r\n  let childIndex = 0\r\n\r\n  return (\r\n    <div className='rn___tabs___container'>\r\n      {startBtn}\r\n      <div\r\n        ref={tabsRef}\r\n        role='tablist'\r\n        aria-label='tabs'\r\n        onKeyDown={handleKeyDown}\r\n        onScroll={handleTabsScroll}\r\n        className={`rn___tabs ${className || ''} ${\r\n          !showTabsScroll ? 'hide___rn___tabs___scroll' : ''\r\n        }`}\r\n      >\r\n        <React.Fragment>\r\n          {React.Children.map(children, (child, index) => {\r\n            const selected = childIndex === activeTab\r\n            childIndex += 1\r\n\r\n            return React.cloneElement(child, {\r\n              ref: (ref) => (tabRef.current[index] = ref),\r\n              onClick: (e) => onNativeTabClick(e, index),\r\n              role: 'tab',\r\n              'aria-selected': selected ? 'true' : 'false',\r\n              id: `tab-${childIndex}`,\r\n              tabIndex: selected ? '0' : '-1',\r\n              className: `rn___tab rn___btn ${\r\n                child.props.className ? child.props.className : ''\r\n              }`,\r\n              selected: selected\r\n            })\r\n          })}\r\n        </React.Fragment>\r\n      </div>\r\n      {endBtn}\r\n    </div>\r\n  )\r\n}\r\n","'use strict'\r\n\r\nexport default function ownerDocument(node) {\r\n  return (node && node.ownerDocument) || document\r\n}\r\n","import * as React from 'react'\r\n\r\nexport const Tab = React.forwardRef(({ ...props }, ref) => {\r\n  return (\r\n    <button\r\n      {...props}\r\n      className={`${props.className} ${\r\n        props.selected ? 'rn___tab___selected' : ''\r\n      }`}\r\n      ref={ref}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  )\r\n})\r\n","import React from 'react'\n\nimport { Tabs, Tab } from 'react-tabs-scrollable'\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'react-tabs-scrollable/dist/index.css'\nimport 'react-tabs-scrollable/dist/rts.css'\nimport './main.css'\n\nconst App = () => {\n  const [activeTab, setActiveTab] = React.useState(11)\n  const onTabClick = (e, index) => {\n    console.log(e)\n    setActiveTab(index)\n  }\n\n  const navBtnsRef = React.useRef()\n\n  const [isLeftArrowDisapled, setIsLeftArrowDisabled] = React.useState(false)\n  const [isRightArrowDisapled, setIsRightArrowDisabled] = React.useState(false)\n  const [selectedTabCoor, setSelectedTabCoor] = React.useState({})\n  const [showTabsFeaturesObj, setShowTabsFeaturesObj] = React.useState({\n    tabsScrollAmount: 3,\n    animationDuration: 300,\n    navBtnCLickAnimationDuration: 300,\n    selectedAnimationDuration: 300,\n    hideNavBtns: false,\n    hideNavBtnsOnMobile: true,\n    NavBtnsIconColor: 'rgba(0, 0, 0, 0.6)',\n    showTabsScroll: false\n  })\n\n  const didReachEnd = (val) => setIsRightArrowDisabled(val)\n  const didReachStart = (val) => setIsLeftArrowDisabled(val)\n  const selectedTabCoordinates = (coors) => setSelectedTabCoor(coors)\n\n  const onInputChange = (e) => {\n    setShowTabsFeaturesObj({\n      ...showTabsFeaturesObj,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const onSwitchChange = (e) => {\n    setShowTabsFeaturesObj({\n      ...showTabsFeaturesObj,\n      [e.target.name]: e.target.checked\n    })\n  }\n  return (\n    <div>\n      <Tabs\n        activeTab={activeTab}\n        onTabClick={onTabClick}\n        // the props returns a group of events to control the tabs such as onLeftBtnClick\n        action={navBtnsRef}\n        // sets if the direction of the page is RTL or not\n        isRTL={false}\n        // sets if the tabs reached the end point of the tab container\n        didReachEnd={didReachEnd}\n        // sets if the tabs reached the start point container\n        didReachStart={didReachStart}\n        // sets how many tabs you want to scroll on every move\n        // default 3 tabs on each navigation button click\n        tabsScrollAmount={showTabsFeaturesObj.tabsScrollAmount}\n        // sets the general animation duration when you click on the navigation buttons and when you click out the tabs view\n        // default 300s\n        animationDuration={showTabsFeaturesObj.animationDuration}\n        // sets the animation of the scroll when you click on the navigation buttons\n        // note : this will overwirte the animationDuration value\n        // default 300s\n        navBtnCLickAnimationDuration={\n          showTabsFeaturesObj.navBtnCLickAnimationDuration\n        }\n        // sets the animation of the scroll when you click on a tab that is out of the view\n        // note : this will overwirte the animationDuration value\n        // default 300s\n        selectedAnimationDuration={\n          showTabsFeaturesObj.selectedAnimationDuration\n        }\n        // sets the right navitgation vutton icon\n        // default feather arrow-right svg icon\n        /* Setting the right navigation button icon. */\n        /* Setting the right navigation button icon. */\n        // rightBtnIcon={\">\"}\n        // sets the left navitgation vutton icon\n        // default feather arrow-left svg icon\n        // leftBtnIcon={\"<\"}\n        //hides the navigantion button\n        // default false\n        hideNavBtns={showTabsFeaturesObj.hideNavBtns}\n        // hides the navigation buttons on mobile devices\n        // default false\n        hideNavBtnsOnMobile={showTabsFeaturesObj.hideNavBtnsOnMobile}\n        // shows the scroll of the tabs\n        // default false\n        showTabsScroll={showTabsFeaturesObj.showTabsScroll}\n        // sets the color of navigation buttons if you dont want to use your own\n        // it just change the stroke color of the svg icon\n        // default #fff\n        // you cant use this option if you used your own btns\n\n        navBtnsIconColor={showTabsFeaturesObj.navBtnsIconColor}\n        // gets the coordinate of the selected tab\n        // returns object of the width and the scrollLeft of the selected tab\n        // be carefulwhen you use state with this function it will be triggered on every scroll movement and when the app rerenders\n        selectedTabCoordinates={selectedTabCoordinates}\n      >\n        {/* {[...Array(20).keys()].map((item) => (\n          <Tab key={item}>item {item}</Tab>\n        ))} */}\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n        <Tab>item </Tab>\n\n        <Tab>item </Tab>\n\n        <Tab>item </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}